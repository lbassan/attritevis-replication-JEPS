p <- p + geom_vline(data= data.frame(type="Treatment",
col="Treatment", treatment = treatment),
aes(colour=col, xintercept = treatment),
size = 0.7, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Outcome",
col="Outcome", DV = DV),
aes(colour=col, xintercept = DV),
size = 0.7, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Post-Treatment",
col="Post-Treatment", post_treatment = post_treatment),
aes(colour=col, xintercept = post_treatment),
size = 0.7, show.legend = TRUE)
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, size = 8))
#add legend details manually
p<- p + scale_colour_manual(name="Legend"
,breaks = c("Pre-Treatment","Treatment",
"Outcome","Post-Treatment")
,labels = c("Pre-Treatment","Treatment",
"Outcome","Post-Treatment")
,values = c("goldenrod3","firebrick","royalblue3","seagreen")
) +
labs(x = "Survey Questions") + #titles
labs(y = "Proportion of respondents attrited") +
ggtitle("(c) Post-treatment Attrition (Immediate)") + ylim(0,1)
c<-p
#Attrition at DV
n <- 1000
df <- data.frame(
Q1 = sample(c(18:90), n, rep = TRUE), #age
Q2 = sample(c("m", "f"), n, rep = TRUE, prob = c(0.55, 0.45)), #sex
Q3 = sample(c(0,1), n, rep = TRUE), #other general pre-treatment questions
Q4 = sample(c(0,1), n, rep = TRUE),
Q5 = sample(c("treatment", "control"), n, rep = TRUE), #we will assume Q5 is the treatment
Q6 = sample(c(0,1), n, rep = TRUE), #post treatment questions
Q7 = sample(c(0,1), n, rep = TRUE),
Q8 = sample(c(0,1), n, rep = TRUE),
Q9 = sample(c(0,1), n, rep = TRUE),
Q10 = sample(c(0,1), n, rep = TRUE))
#Generate attrition at DV + after
invisible(
sapply(sample(1:nrow(df), 450),function(x) {
a <- sample(6:10,1)
df[x,a:ncol(df)] <<- NA
}
))
at<-attrition(df)
tmp_colors<-viridis(n=2,alpha=0.6,begin=0.25,end=1,direction=1,option="D")
at$questions <- factor(at$questions, levels=at$questions)
at$questions<-as.numeric(at$questions)
p <- at %>%
ggplot(aes(questions,proportion)) +
geom_rect_pattern(aes(xmin= 4.7,
xmax = 10,
ymin = 0,
ymax = Inf),
pattern = 'stripe',
pattern_fill = 'pink',
pattern_colour ='pink',
pattern_size = 3.5,
pattern_alpha = 0.02,
pattern_density = 0.02,
alpha = 0.02,
fill    = 'white') +
geom_rect_pattern(aes(xmin=1,
xmax = 4.5,
ymin = 0,
ymax = Inf),
pattern = 'stripe',
pattern_fill = 'gray',
pattern_colour ='gray',
pattern_size = 3.5,
pattern_alpha = 0.02,
pattern_density = 0.02,
alpha = 0.02,
fill    = 'white') +
#add if statement based on freq
geom_histogram(color="#e9ecef", alpha=0.6, stat = 'identity') +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7,8,9,10),
labels=c("Q1", "Q2", "Q3", "Q4", "Q5","Q6","Q7","Q8"
,"Q9","Q10"))
scale_fill_manual(values=tmp_colors)
#vlines
pre_treatment <- as.numeric(c(1,2,3,4))
treatment <- as.numeric(5)
DV<- as.numeric(c(6,7))
post_treatment <- as.numeric(c(8,9,10))
p <- p + geom_vline(data= data.frame(type="Pre-Treatment",
col="Pre-Treatment", pre_treatment = pre_treatment),
aes(colour=col, xintercept = pre_treatment),
size = 0.7, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Treatment",
col="Treatment", treatment = treatment),
aes(colour=col, xintercept = treatment),
size = 1.5, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Outcome",
col="Outcome", DV = DV),
aes(colour=col, xintercept = DV),
size = 0.7, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Post-Treatment",
col="Post-Treatment", post_treatment = post_treatment),
aes(colour=col, xintercept = post_treatment),
size = 0.7, show.legend = TRUE)
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, size = 8))
#add legend details manually
p<- p + scale_colour_manual(name="Legend"
,breaks = c("Pre-Treatment","Treatment",
"Outcome","Post-Treatment")
,labels = c("Pre-Treatment","Treatment",
"Outcome","Post-Treatment")
,values = c("goldenrod3","firebrick","royalblue3","seagreen")
) +
labs(x = "Survey Questions") + #titles
labs(y = "Proportion of respondents attrited") +
ggtitle("(d) Post-treatment Attrition (prolonged)") + ylim(0,1)
d<-p
require(grid)
figure <- ggarrange(a + rremove("ylab") + rremove("xlab"), b + rremove("ylab")
+ rremove("xlab"), c + rremove("ylab") + rremove("xlab"),
d + rremove("ylab") + rremove("xlab"), # remove axis labels from plots
labels = NULL,
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "top",
align = "hv",
font.label = list(size = 10, color = "black", face = "bold",
family = NULL, position = "top"))
annotate_figure(figure, left = textGrob("Proportion of attrited", rot = 90, vjust = 1, gp = gpar(cex = 1.5)),
bottom = textGrob("Experiment Questions", gp = gpar(cex = 1.5)))
require(ggpattern)
#Attition post-treatment (throughout survey)
n <- 1000
df <- data.frame(
Q1 = sample(c(18:90), n, rep = TRUE), #age
Q2 = sample(c("m", "f"), n, rep = TRUE, prob = c(0.55, 0.45)), #sex
Q3 = sample(c(0,1), n, rep = TRUE), #other general pre-treatment questions
Q4 = sample(c(0,1), n, rep = TRUE),
Q5 = sample(c("treatment", "control"), n, rep = TRUE), #we will assume Q5 is the treatment
Q6 = sample(c(0,1), n, rep = TRUE), #post treatment questions
Q7 = sample(c(0,1), n, rep = TRUE),
Q8 = sample(c(0,1), n, rep = TRUE),
Q9 = sample(c(0,1), n, rep = TRUE),
Q10 = sample(c(0,1), n, rep = TRUE))
#Generate attrition post
invisible(
sapply(sample(1:nrow(df), 150),function(x) {
a <- sample(1:10,1)
df[x,a:ncol(df)] <<- NA
}
))
at<-attrition(df)
tmp_colors<-viridis(n=2,alpha=0.6,begin=0.25,end=1,direction=1,option="D")
at$questions <- factor(at$questions, levels=at$questions)
at$questions<-as.numeric(at$questions)
p <- at %>%
ggplot(aes(questions,proportion)) +
geom_rect_pattern(aes(xmin= 4.7,
xmax = 10,
ymin = 0,
ymax = Inf),
pattern = 'stripe',
pattern_fill = 'pink',
pattern_colour ='pink',
pattern_size = 3.5,
pattern_alpha = 0.02,
pattern_density = 0.02,
alpha = 0.02,
fill    = 'white') +
geom_rect_pattern(aes(xmin=1,
xmax = 4.5,
ymin = 0,
ymax = Inf),
pattern = 'stripe',
pattern_fill = 'gray',
pattern_colour ='gray',
pattern_size = 3.5,
pattern_alpha = 0.02,
pattern_density = 0.02,
alpha = 0.02,
fill    = 'white') +
#add if statement based on freq
geom_histogram(color="#e9ecef", alpha=0.6, stat = 'identity') +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7,8,9,10),
labels=c("Q1", "Q2", "Q3", "Q4", "Q5","Q6","Q7","Q8"
,"Q9","Q10"))
scale_fill_manual(values=tmp_colors)
#vlines
pre_treatment <- as.numeric(c(1,2,3,4))
treatment <- as.numeric(5)
DV<- as.numeric(c(6,7))
post_treatment <- as.numeric(c(8,9,10))
p <- p + geom_vline(data= data.frame(type="Pre-Treatment",
col="Pre-Treatment", pre_treatment = pre_treatment),
aes(colour=col, xintercept = pre_treatment),
size = 0.7, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Treatment",
col="Treatment", treatment = treatment),
aes(colour=col, xintercept = treatment),
size = 2, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Outcome",
col="Outcome", DV = DV),
aes(colour=col, xintercept = DV),
size = 0.7, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Post-Treatment",
col="Post-Treatment", post_treatment = post_treatment),
aes(colour=col, xintercept = post_treatment),
size = 0.7, show.legend = TRUE)
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, size = 8))
#add legend details manually
p<- p + scale_colour_manual(name="Legend"
,breaks = c("Pre-Treatment","Treatment",
"Outcome","Post-Treatment")
,labels = c("Pre-Treatment","Treatment",
"Outcome","Post-Treatment")
,values = c("goldenrod3","firebrick","royalblue3","seagreen")
) +
labs(x = "Survey Questions") + #titles
labs(y = "Proportion of respondents attrited") +
ggtitle("(a) Low level Attrition") + ylim(0,1)
a<-p
n <- 1000
df <- data.frame(
Q1 = sample(c(18:90), n, rep = TRUE), #age
Q2 = sample(c("m", "f"), n, rep = TRUE, prob = c(0.55, 0.45)), #sex
Q3 = sample(c(0,1), n, rep = TRUE), #other general pre-treatment questions
Q4 = sample(c(0,1), n, rep = TRUE),
Q5 = sample(c("treatment", "control"), n, rep = TRUE), #we will assume Q5 is the treatment
Q6 = sample(c(0,1), n, rep = TRUE), #post treatment questions
Q7 = sample(c(0,1), n, rep = TRUE),
Q8 = sample(c(0,1), n, rep = TRUE),
Q9 = sample(c(0,1), n, rep = TRUE),
Q10 = sample(c(0,1), n, rep = TRUE))
#Generate attrition pre-treatment
invisible(
sapply(sample(1:nrow(df), 450),function(x) {
a <- sample(1:4,1)
df[x,a:ncol(df)] <<- NA
}
))
#plot attrition pre-treatment
at<-attrition(df)
tmp_colors<-viridis(n=2,alpha=0.6,begin=0.25,end=1,direction=1,option="D")
at$questions <- factor(at$questions, levels=at$questions)
at$questions<-as.numeric(at$questions)
p <- at %>%
ggplot(aes(questions,proportion)) +
geom_rect_pattern(aes(xmin= 4.7,
xmax = 10,
ymin = 0,
ymax = Inf),
pattern = 'stripe',
pattern_fill = 'pink',
pattern_colour ='pink',
pattern_size = 3.5,
pattern_alpha = 0.02,
pattern_density = 0.02,
alpha = 0.02,
fill    = 'white') +
geom_rect_pattern(aes(xmin=1,
xmax = 4.5,
ymin = 0,
ymax = Inf),
pattern = 'stripe',
pattern_fill = 'gray',
pattern_colour ='gray',
pattern_size = 3.5,
pattern_alpha = 0.02,
pattern_density = 0.02,
alpha = 0.02,
fill    = 'white') +
#add if statement based on freq
geom_histogram(color="#e9ecef", alpha=0.6, stat = 'identity') +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7,8,9,10),
labels=c("Q1", "Q2", "Q3", "Q4", "Q5","Q6","Q7","Q8"
,"Q9","Q10"))
scale_fill_manual(values=tmp_colors)
#vlines
pre_treatment <- as.numeric(c(1,2,3,4))
treatment <- as.numeric(5)
DV<- as.numeric(c(6,7))
post_treatment <- as.numeric(c(8,9,10))
p <- p + geom_vline(data= data.frame(type="Pre-Treatment",
col="Pre-Treatment", pre_treatment = pre_treatment),
aes(colour=col, xintercept = pre_treatment),
size = 0.7, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Treatment",
col="Treatment", treatment = treatment),
aes(colour=col, xintercept = treatment),
size = 2, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Outcome",
col="Outcome", DV = DV),
aes(colour=col, xintercept = DV),
size = 0.7, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Post-Treatment",
col="Post-Treatment", post_treatment = post_treatment),
aes(colour=col, xintercept = post_treatment),
size = 0.7, show.legend = TRUE)
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, size = 8))
#add legend details manually
p<- p + scale_colour_manual(name="Legend"
,breaks = c("Pre-Treatment","Treatment",
"Outcome","Post-Treatment")
,labels = c("Pre-Treatment","Treatment",
"Outcome","Post-Treatment")
,values = c("goldenrod3","firebrick","royalblue3","seagreen")
) +
labs(x = "Survey Questions") + #titles
labs(y = "Proportion of respondents attrited") +
ggtitle("(b) Pre-Treatment Attrition") + ylim(0,1)
b<-p
#attrition right after treatment
n <- 1000
df <- data.frame(
Q1 = sample(c(18:90), n, rep = TRUE), #age
Q2 = sample(c("m", "f"), n, rep = TRUE, prob = c(0.55, 0.45)), #sex
Q3 = sample(c(0,1), n, rep = TRUE), #other general pre-treatment questions
Q4 = sample(c(0,1), n, rep = TRUE),
Q5 = sample(c("treatment", "control"), n, rep = TRUE), #we will assume Q5 is the treatment
Q6 = sample(c(0,1), n, rep = TRUE), #post treatment questions
Q7 = sample(c(0,1), n, rep = TRUE),
Q8 = sample(c(0,1), n, rep = TRUE),
Q9 = sample(c(0,1), n, rep = TRUE),
Q10 = sample(c(0,1), n, rep = TRUE))
#Generate attrition at treatment
invisible(
sapply(sample(1:nrow(df), 450),function(x) {
a <- sample(5:6,1)
df[x,a:ncol(df)] <<- NA
}
))
at<-attrition(df)
tmp_colors<-viridis(n=2,alpha=0.6,begin=0.25,end=1,direction=1,option="D")
at$questions <- factor(at$questions, levels=at$questions)
at$questions<-as.numeric(at$questions)
p <- at %>%
ggplot(aes(questions,proportion)) +
geom_rect_pattern(aes(xmin= 4.7,
xmax = 10,
ymin = 0,
ymax = Inf),
pattern = 'stripe',
pattern_fill = 'pink',
pattern_colour ='pink',
pattern_size = 3.5,
pattern_alpha = 0.02,
pattern_density = 0.02,
alpha = 0.02,
fill    = 'white') +
geom_rect_pattern(aes(xmin=1,
xmax = 4.5,
ymin = 0,
ymax = Inf),
pattern = 'stripe',
pattern_fill = 'gray',
pattern_colour ='gray',
pattern_size = 3.5,
pattern_alpha = 0.02,
pattern_density = 0.02,
alpha = 0.02,
fill    = 'white') +
#add if statement based on freq
geom_histogram(color="#e9ecef", alpha=0.6, stat = 'identity') +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7,8,9,10),
labels=c("Q1", "Q2", "Q3", "Q4", "Q5","Q6","Q7","Q8"
,"Q9","Q10"))
scale_fill_manual(values=tmp_colors)
#vlines
pre_treatment <- as.numeric(c(1,2,3,4))
treatment <- as.numeric(5)
DV<- as.numeric(c(6,7))
post_treatment <- as.numeric(c(8,9,10))
p <- p + geom_vline(data= data.frame(type="Pre-Treatment",
col="Pre-Treatment", pre_treatment = pre_treatment),
aes(colour=col, xintercept = pre_treatment),
size = 0.7, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Treatment",
col="Treatment", treatment = treatment),
aes(colour=col, xintercept = treatment),
size = 2, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Outcome",
col="Outcome", DV = DV),
aes(colour=col, xintercept = DV),
size = 0.7, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Post-Treatment",
col="Post-Treatment", post_treatment = post_treatment),
aes(colour=col, xintercept = post_treatment),
size = 0.7, show.legend = TRUE)
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, size = 8))
#add legend details manually
p<- p + scale_colour_manual(name="Legend"
,breaks = c("Pre-Treatment","Treatment",
"Outcome","Post-Treatment")
,labels = c("Pre-Treatment","Treatment",
"Outcome","Post-Treatment")
,values = c("goldenrod3","firebrick","royalblue3","seagreen")
) +
labs(x = "Survey Questions") + #titles
labs(y = "Proportion of respondents attrited") +
ggtitle("(c) Post-treatment Attrition (Immediate)") + ylim(0,1)
c<-p
#Attrition at DV
n <- 1000
df <- data.frame(
Q1 = sample(c(18:90), n, rep = TRUE), #age
Q2 = sample(c("m", "f"), n, rep = TRUE, prob = c(0.55, 0.45)), #sex
Q3 = sample(c(0,1), n, rep = TRUE), #other general pre-treatment questions
Q4 = sample(c(0,1), n, rep = TRUE),
Q5 = sample(c("treatment", "control"), n, rep = TRUE), #we will assume Q5 is the treatment
Q6 = sample(c(0,1), n, rep = TRUE), #post treatment questions
Q7 = sample(c(0,1), n, rep = TRUE),
Q8 = sample(c(0,1), n, rep = TRUE),
Q9 = sample(c(0,1), n, rep = TRUE),
Q10 = sample(c(0,1), n, rep = TRUE))
#Generate attrition at DV + after
invisible(
sapply(sample(1:nrow(df), 450),function(x) {
a <- sample(6:10,1)
df[x,a:ncol(df)] <<- NA
}
))
at<-attrition(df)
tmp_colors<-viridis(n=2,alpha=0.6,begin=0.25,end=1,direction=1,option="D")
at$questions <- factor(at$questions, levels=at$questions)
at$questions<-as.numeric(at$questions)
p <- at %>%
ggplot(aes(questions,proportion)) +
geom_rect_pattern(aes(xmin= 4.7,
xmax = 10,
ymin = 0,
ymax = Inf),
pattern = 'stripe',
pattern_fill = 'pink',
pattern_colour ='pink',
pattern_size = 3.5,
pattern_alpha = 0.02,
pattern_density = 0.02,
alpha = 0.02,
fill    = 'white') +
geom_rect_pattern(aes(xmin=1,
xmax = 4.5,
ymin = 0,
ymax = Inf),
pattern = 'stripe',
pattern_fill = 'gray',
pattern_colour ='gray',
pattern_size = 3.5,
pattern_alpha = 0.02,
pattern_density = 0.02,
alpha = 0.02,
fill    = 'white') +
#add if statement based on freq
geom_histogram(color="#e9ecef", alpha=0.6, stat = 'identity') +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7,8,9,10),
labels=c("Q1", "Q2", "Q3", "Q4", "Q5","Q6","Q7","Q8"
,"Q9","Q10"))
scale_fill_manual(values=tmp_colors)
#vlines
pre_treatment <- as.numeric(c(1,2,3,4))
treatment <- as.numeric(5)
DV<- as.numeric(c(6,7))
post_treatment <- as.numeric(c(8,9,10))
p <- p + geom_vline(data= data.frame(type="Pre-Treatment",
col="Pre-Treatment", pre_treatment = pre_treatment),
aes(colour=col, xintercept = pre_treatment),
size = 0.7, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Treatment",
col="Treatment", treatment = treatment),
aes(colour=col, xintercept = treatment),
size = 2, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Outcome",
col="Outcome", DV = DV),
aes(colour=col, xintercept = DV),
size = 0.7, show.legend = TRUE)
p <- p + geom_vline(data= data.frame(type="Post-Treatment",
col="Post-Treatment", post_treatment = post_treatment),
aes(colour=col, xintercept = post_treatment),
size = 0.7, show.legend = TRUE)
p <- p + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1, size = 8))
#add legend details manually
p<- p + scale_colour_manual(name="Legend"
,breaks = c("Pre-Treatment","Treatment",
"Outcome","Post-Treatment")
,labels = c("Pre-Treatment","Treatment",
"Outcome","Post-Treatment")
,values = c("goldenrod3","firebrick","royalblue3","seagreen")
) +
labs(x = "Survey Questions") + #titles
labs(y = "Proportion of respondents attrited") +
ggtitle("(d) Post-treatment Attrition (prolonged)") + ylim(0,1)
d<-p
require(grid)
figure <- ggarrange(a + rremove("ylab") + rremove("xlab"), b + rremove("ylab")
+ rremove("xlab"), c + rremove("ylab") + rremove("xlab"),
d + rremove("ylab") + rremove("xlab"), # remove axis labels from plots
labels = NULL,
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "top",
align = "hv",
font.label = list(size = 10, color = "black", face = "bold",
family = NULL, position = "top"))
annotate_figure(figure, left = textGrob("Proportion of attrited", rot = 90, vjust = 1, gp = gpar(cex = 1.5)),
bottom = textGrob("Experiment Questions", gp = gpar(cex = 1.5)))
